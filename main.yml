# vim: sw=2

- name: Update /etc
  hosts: ovh
  become: yes
  tags:
  - etc
  tasks:
  - name: Update /etc/hosts
    template:
      src: templates/etc/hosts.j2
      dest: /etc/hosts

- name: Update archives config
  hosts: archives
  become: yes
  become_user: archiver
  tags:
  - archives
  tasks:
  - name: Update .env
    template:
      src: templates/archives/env.j2
      dest: /var/www/archives/shared/.env

- name: Update reportbooru config
  hosts: reportbooru
  tags:
  - reportbooru
  tasks:
  - name: Update .env
    template:
      src: templates/reportbooru/env.j2
      dest: /var/www/reportbooru/shared/.env

- name: Update production app server config
  hosts: rails
  tags:
  - rails
  tasks:
  - name: Update .env.production
    template:
      src: templates/danbooru/env.production
      dest: /var/www/danbooru/shared/.env.production
  - name: Update database.yml
    template:
      src: templates/danbooru/database.yml
      dest: /var/www/danbooru/shared/config/database.yml
  - name: Update danbooru_local_config.rb
    template:
      src: templates/danbooru/danbooru_local_config.rb
      dest: /var/www/danbooru/shared/config/danbooru_local_config.rb

- name: Configure nginx
  hosts: nginx
  become: yes
  tags:
  - nginx
  tasks:
  - name: Configure firewall (port 80)
    firewalld:
      service: http
      immediate: yes
      permanent: yes
      state: enabled
    when: ansible_distribution == "Fedora"
  - name: Configure firewall (port 443)
    firewalld:
      service: https
      immediate: yes
      permanent: yes
      state: enabled
    when: ansible_distribution == "Fedora"
  - name: Install nginx
    package:
      name: nginx
      state: present
  - name: Install certbot
    package:
      name: certbot
      state: present
  - name: Install SSL certificate
    command:
      cmd: certbot certonly -n --agree-tos --email webmaster@danbooru.donmai.us --standalone -d {{ inventory_hostname }}
      creates: /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem
  - name: Create directories in /etc/nginx/**/*
    file:
      path: '/etc/nginx/{{ item.path }}'
      state: directory
      owner: root
      group: root
      mode: '{{ item.mode }}'
    with_filetree: ../templates/nginx
    when: item.state == 'directory'
  - name: Update files in /etc/nginx/**/*
    template:
      src: '{{ item.src }}'
      dest: '/etc/nginx/{{ item.path | regex_replace("\.j2$", "") }}'
      owner: root
      group: root
      mode: '{{ item.mode }}'
    with_filetree: ../templates/nginx
    when: item.state == 'file'
    notify:
    - reload nginx
  - name: Update /etc/nginx/sites-available/*
    file:
      src: '/etc/nginx/sites-available/{{ nginx_site }}.conf'
      dest: '/etc/nginx/sites-enabled/{{ nginx_site }}.conf'
      state: link
      force: yes
      owner: root
      group: root
    notify:
    - reload nginx
  - name: Start nginx
    service:
      name: nginx
      state: started
      enabled: true
  handlers:
  - name: reload nginx
    service:
      name: nginx
      state: reloaded
