# A service account to let Prometheus scrape node endpoints from the Kube API.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: mgmt

---

# A service account for deploying betabooru.donmai.us from Github Actions.
#
# To get the token:
#
#   kubectl -n danbooru get secret $(kubectl -n danbooru get sa/github-actions -o jsonpath="{.secrets[0].name}") -o go-template="{{.data.token | base64decode}}"
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-actions
  namespace: danbooru

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: betabooru-deployer
  namespace: danbooru
rules:
- apiGroups: ["apps", "extensions"]
  resources: ["deployments"]
  resourceNames: ["betabooru"]
  verbs: ["get", "patch"]

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1

metadata:
  name: prometheus-cluster-role

rules:
  - apiGroups: [""]
    resources: ["nodes", "services", "pods", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: betabooru-deployers
  namespace: danbooru
subjects:
- kind: ServiceAccount
  name: github-actions
  namespace: danbooru
roleRef:
  kind: Role
  name: betabooru-deployer
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding

metadata:
  name: prometheus-cluster-role-binding

roleRef:
  kind: ClusterRole
  name: prometheus-cluster-role
  apiGroup: rbac.authorization.k8s.io

subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: mgmt
