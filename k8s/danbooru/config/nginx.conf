# This is the config file for the Nginx reverse proxy in front of the Danbooru
# webapp. This proxies to the Puma server running Danbooru.
#
# The architecture is Cloudflare -> Nginx ingress -> Nginx -> Puma.
#
# This does the following:
#
# * Serves static files from /danbooru/public
# * Buffers slow requests/responses.
# * Limits upload sizes to 50MB.
# * Exposes Nginx and Puma metrics and status URLs.
# * Redirects old image URLs to cdn.donmai.us.

daemon off;

error_log  stderr info;
pid        /tmp/nginx.pid;

worker_processes        4;
worker_rlimit_nofile    65536;
worker_shutdown_timeout 15s;

pcre_jit on;

# Set by Kubernetes in danbooru.yaml.
env K8S_NODE_NAME;
env K8S_POD_NAME;

events {
  multi_accept off;
  worker_connections 65536;
}

http {
  charset utf-8;

  types {
    text/css                       css;
    text/html                      html htm;
    text/plain                     txt;
    text/xml                       xml;

    image/gif                      gif;
    image/x-icon                   ico;
    image/jpeg                     jpeg jpg;
    image/png                      png;
    image/svg+xml                  svg;
    image/webp                     webp;
    image/avif                     avif;

    video/mp4                      mp4;
    video/webm                     webm;
    application/x-shockwave-flash  swf;

    application/javascript         js;
    application/json               json;

    application/vnd.ms-fontobject  eot;
    font/ttf                       ttf
    font/woff                      woff;
    font/woff2                     woff2

    application/wasm               wasm;
    application/zip                zip;
  }

  aio         threads;
  aio_write   on;

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;

  access_log  off;

  server_tokens             off;
  log_subrequest            on;
  port_in_redirect          off;
  reset_timedout_connection on;

  #keepalive_time     5m;
  keepalive_timeout  5m;
  keepalive_requests 1000;

  client_header_buffer_size       1k;
  client_header_timeout           60s;
  large_client_header_buffers     4 8k;
  client_body_buffer_size         8k;
  client_body_timeout             60s;

  client_body_temp_path /tmp/nginx-client-body;
  proxy_temp_path       /tmp/nginx-proxy;
  fastcgi_temp_path     /tmp/nginx-fastcgi;
  uwsgi_temp_path       /tmp/nginx-uwsgi;
  scgi_temp_path        /tmp/nginx-scgi;

  open_file_cache          max=20000 inactive=5m;
  open_file_cache_min_uses 2;
  open_file_cache_valid    5m;
  open_file_cache_errors   off;

  types_hash_max_size             2048;
  map_hash_bucket_size            64;
  variables_hash_bucket_size      256;
  variables_hash_max_size         2048;

  gzip on;
  gzip_comp_level 5;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_types application/xml+rss application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/javascript text/plain;
  gzip_proxied any;
  gzip_vary on;

  # Get the real IP from the downstream ingress.
  # https://nginx.org/en/docs/http/ngx_http_realip_module.html
  set_real_ip_from 10.0.0.0/8;
  set_real_ip_from 172.16.0.0/12;
  set_real_ip_from 192.168.0.0/16;
  real_ip_header X-Real-IP;

  # Redirect www.danbooru.donmai.us, www.donmai.us, and donmai.us to danbooru.donmai.us.
  server {
    listen 8080;
    listen [::]:8080;

    server_name www.danbooru.donmai.us www.donmai.us donmai.us;
    return 308 https://danbooru.donmai.us$request_uri;
  }

  server {
    server_name _;

    listen 8080 default_server backlog=8192;
    listen [::]:8080 default_server backlog=8192;

    root /danbooru/public;

    set_by_lua $k8s_node_name 'return os.getenv("K8S_NODE_NAME")';
    set_by_lua $k8s_pod_name 'return os.getenv("K8S_POD_NAME")';
    more_set_headers "Via: $k8s_node_name/$k8s_pod_name";

    # error_page 404 /404.html;
    # error_page 500 502 503 504 /50x.html;

    # Print basic status info.
    # https://danbooru.donmai.us/nginx/status
    # http://nginx.org/en/docs/http/ngx_http_stub_status_module.html
    location = /nginx/status {
      stub_status on;
    }

    # Print the request headers received by us. For debugging purposes only.
    # https://danbooru.donmai.us/nginx/headers
    # https://github.com/openresty/echo-nginx-module#echo_client_request_headers
    location = /nginx/headers {
      echo_duplicate 1 $echo_client_request_headers;
      echo "\r";
    }

    # https://danbooru.donmai.us/puma/stats
    # https://danbooru.donmai.us/puma/gc-stats
    # https://danbooru.donmai.us/puma/thread-backtraces
    # https://danbooru.donmai.us/puma/metrics
    #
    # https://github.com/harmjanblok/puma-metrics
    # https://github.com/puma/puma#controlstatus-server
    location = /puma/stats { proxy_pass http://127.0.0.1:9293/stats; }
    location = /puma/gc-stats { proxy_pass http://127.0.0.1:9293/gc-stats; }
    location = /puma/thread-backtraces { proxy_pass http://127.0.0.1:9293/thread-backtraces; }
    location = /puma/metrics { proxy_pass http://127.0.0.1:9393; }

    location /nginx { return 404; }
    location /puma { return 404; }

    # Serve static files in /public.
    location /packs  { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location /fonts  { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location /images { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location = /favicon.ico { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location = /favicon.svg { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location = /apple-touch-icon.png { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
    location = /apple-touch-icon-precomposed.png { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }

    error_page 404 /404.html;
    location = /404.html {
      internal;
      more_set_headers "Cache-Control: max-age=0, no-cache, private";
    }

    location /data {
      return 308 https://cdn.donmai.us$request_uri;
    }

    # Proxy everything else to the upstream Puma webserver.
    location / {
      # Pass along the IP of the Nginx ingress who forwarded this request to
      # us. In this context, $realip_remote_addr is the IP of the Nginx
      # ingress, and $http_x_forwarded_for is the end user's real IP.
      #
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
      proxy_set_header X-Forwarded-For "$http_x_forwarded_for, $realip_remote_addr";
      proxy_set_header Host $http_host;

      # These headers are set by the Nginx ingress and must be passed along to
      # the upstream server as-is. If they're not set properly then Rails' CSRF
      # token valiation will fail.
      #
      # https://github.com/rails/rails/issues/22965#issuecomment-172929004
      #proxy_set_header X-Forwarded-Host $host;
      #proxy_set_header X-Forwarded-Port $server_port;
      #proxy_set_header X-Forwarded-Proto $scheme;
      #proxy_set_header X-Real-IP $remote_addr;

      # Buffer responses from the upstream server. Responses are buffered to
      # free the upstream server from having to wait on slow clients. Responses
      # are buffered here because they're not buffered downstream by the Nginx
      # ingress or by Cloudflare.
      #
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering
      # https://support.cloudflare.com/hc/en-us/articles/206049798-Setting-up-Response-Buffering
      proxy_buffering on;

      # The buffer size for the response headers. Should be large enough to
      # hold the largest possible set of response headers received from
      # upstream, typically when sending large session cookies.
      #
      # https://www.getpagespeed.com/server-setup/nginx/tuning-proxy_buffer_size-in-nginx
      # https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size
      proxy_buffer_size 16k;

      # The number and size of the buffers used for reading a response from the
      # upstream server.
      #
      # https://www.getpagespeed.com/server-setup/nginx/tuning-proxy_buffer_size-in-nginx
      # https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers
      proxy_buffers 64 16k; # 1024kb

      # The portion of the proxy buffers to reserve for sending a buffered
      # response to the client.
      #
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_busy_buffers_size
      proxy_busy_buffers_size 128k;

      # Don't change URLs in the "Location" or "Refresh" headers of the upstream response.
      #
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect
      proxy_redirect off;

      # The timeout for reading a response from the proxied server. The timeout
      # is set only between two successive read operations, not for the
      # transmission of the whole response. If the proxied server does not
      # transmit anything within this time, the connection is closed.
      #
      # The default request timeout in Puma is 65s;
      #
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header
      proxy_read_timeout 70s;

      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_send_timeout
      proxy_send_timeout 60s;

      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_connect_timeout
      proxy_connect_timeout 60s;

      # The max size of a POST request, and consequently, the max size of a
      # file uploaded from your computer. XXX If this is changed, it must be
      # changed in the ingress Nginx config and the Danbooru config too.
      #
      # In Cloudflare, the max upload size is 100MB.
      #
      # http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
      # https://developers.cloudflare.com/cache/about/default-cache-behavior#customization-options-and-limitations
      client_max_body_size 50m;

      # The upstream Puma webserver.
      # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
      proxy_pass http://127.0.0.1:3000;
    }
  }
}
